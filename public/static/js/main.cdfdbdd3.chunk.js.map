{"version":3,"sources":["components/Navigation/index.js","components/Main/Video.js","components/Main/Title.js","components/Main/Comment.js","components/Main/Comments.js","api/index.js","components/Main/EmojiButton.js","components/Main/Cinema.js","actions/index.js","components/Main/Description.js","components/Main/VideoMargin.js","components/Main/index.js","components/P5Wrapper/sketch.js","components/FindEmoji/index.js","components/About/index.js","components/Menu/MenuLink.js","components/Menu/index.js","App.js","reducers/index.js","Middleware/logger.js","serviceWorker.js","index.js"],"names":["connect","props","onNavClick","dispatch","type","className","to","onClick","Video","console","log","controls","muted","src","project","videoURL","onMouseEnter","e","sideBlockLeft","target","parentElement","nextElementSibling","sideBlockRight","previousElementSibling","scene","video","onVideoEnter","id","onMouseLeave","onVideoLeave","ReactGA","event","category","action","onPlay","Title","href","link","title","Comment","comment","Object","values","keys","Comments","onCreateComment","preventDefault","state","author","setState","projectId","resetForm","onCommentChange","value","onAuthorChange","toggleCommentForm","showCommentForm","this","undefined","map","each","index","key","onSubmit","onChange","placeholder","rows","cols","wrap","Component","client","axios","create","baseURL","headers","EmojiButton","onThumbsUp","counts","addCountPost","method","url","params","api","then","res","data","Cinema","fetchProjects","getState","boards","payload","get","resp","projects","catch","err","fetchProjectsFailed","createComment","entities","projectIdComment","recieveComment","Description","description","VideoMargin","logNodes","Main","thumbsUp","pause","style","transform","marginLeft","marginRight","play","pushback","Math","sin","PI","projectsLength","page","sketch","p","count","setCount","animalsState","nodesState","setSelectedNode","mouseXpos","mouseYpos","nodes","nodeCount","animalsNodes","emojiString","tempSlice","floor","random","length","currentEmoji","slice","windowResized","resizeCanvas","windowWidth","windowHeight","forEach","updateWindowPosition","setRandomPosition","setAnimalsPosition","myCustomRedrawAccordingToNewPropsHandler","selectedNode","countState","i","updateInterests","mouseClicked","onMouseClick","mousePressed","keyPressed","frameRate","randomSlicePosition","keyReleased","setup","ellipseMode","RADIUS","createCanvas","ranRadius","Node","otherNodes","radius","x","y","outerRadius","friendsList","interests","name","matchedInterests","offsetX","offsetY","nodeColor","angle","radians","alphaColor","identity","fillColor","color","randomSlice","abs","emojiSurrogates","mouseX","mouseY","animalsPosX","cos","animalsPosY","point","offset","trail","toString","findSurrogatePair","textSize","text","fill","ellipse","strokeWeight","textAlign","CENTER","n","dist","stroke","overlap","line","overlapSoReposition","overlapSoRepositionAnimals","arr1","arr2","some","item","includes","matchFound","push","sameInterests","sweight","trueFriends","deg","circleX","circleY","draw","clear","setAnimalsCircle","setNodesCircle","noFill","display","displayNetwork","reposition","onMouseOver","displayAnimals","displayInterests","repositionAnimals","width","pop","initialNodes","initialAnimals","Sketch","useState","setNodesState","setAnimalsState","nodeName","setNodeName","nodeInterest","setNodeInterest","nodeInterest2","setNodeInterest2","nodeInterest3","setNodeInterest3","nodeInterest4","setNodeInterest4","selectedNodeObject","setSelectedNodeObject","inputEl","useRef","setInputBtnColor","wordBank","setWordBank","randomItem","wordCounts","arrArg","copy","randomNumber","returnArray","splice","useEffect","current","focus","chooseWords","sentenceCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","selectedInput","setSelectedInput","question1","setQuestion1","question2","onClickInputButton","backgroundColor","filteredCopy","filter","chooseManyWords","find","element","selectedNodeIndex","findIndex","nextNodesState","obj","updatedNode","divStyle","flexWrap","spaceAround","padding","newNode","ref","nextState","FindEmoji","About","Menu","mockProjects","App","mobile","document","initialize","pageview","window","location","pathname","search","sections","querySelectorAll","bubble","querySelector","checkDevice","IntersectionObserver","navCheck","threshold","screen","entry","activeAnchor","coords","getBoundingClientRect","directions","height","top","left","setProperty","addEventListener","section","states","exact","path","component","initialPageState","myProjects","newArr","pushedProject","getProjectByProjectId","matchingProject","lastAction","logger","store","next","group","result","groupEnd","Boolean","hostname","match","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdfdbdd3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Navigation = (props) => {\n  const onNavClick = () => {\n    props.dispatch({\n      type:'CHANGE_PAGE'\n    })\n  }\n\n  return(\n    <div className=\"navigation\">\n      <Link className=\"navigation-list\" to=\"/\">\n        <section className=\"mymain\">\n          <span className=\"mymainLoc\"\n                onClick={onNavClick}\n          >Main</span>\n        </section>\n\n      </Link>\n      <Link className=\"navigation-list\" to=\"/about\">\n        <section className=\"myabout\">\n          <span className=\"myaboutLoc\"\n                onClick={onNavClick}\n          >About</span>\n        </section>\n      </Link>\n\n      {/*\n        <a href=\"/find\">\n        <section className=\"myfeedback\">\n          <span className=\"myfeedbackLoc\"\n                onClick={onNavClick}\n          >Emoji Project</span>\n        </section>\n\n        </a>\n\n        */}\n      {\n        /*\n          <Link className=\"navigation-list\" to=\"/feedback\">\n\n\n          </Link>\n        */\n      }\n\n      <div className=\"bubble\"></div>\n\n\n    </div>\n  )\n};\n\n\nexport default connect()(Navigation);\n","import React from 'react';\nimport ReactGA from 'react-ga';\nconst Video = props => {\n\n  function onVideoLeave(e) {\n    let sideBlockLeft = e.target.parentElement.nextElementSibling;\n    let sideBlockRight = e.target.parentElement.previousElementSibling;\n    let scene = e.target.parentElement;\n    let video = e.target;\n    props.onVideoLeave(props.project.id, sideBlockLeft, sideBlockRight, scene, video);\n\n    ReactGA.event({\n      category: 'Video Hovered',\n      action: `id # ${props.project.id} -> hovered`\n    });\n  }\n  function onVideoEnter(e) {\n    let sideBlockLeft = e.target.parentElement.nextElementSibling;\n    let sideBlockRight = e.target.parentElement.previousElementSibling;\n    let scene = e.target.parentElement;\n    let video = e.target;\n    props.onVideoEnter(props.project.id, sideBlockLeft, sideBlockRight, scene, video );\n  }\n  const onVideoPlay = () => {\n    ReactGA.event({\n      category: 'Video Played',\n      action: `id # ${props.project.id} -> played`\n    });\n  }\n\n\n\n  console.log('props.', props)\n  return (\n    <video\n      className=\"videos\"\n      controls\n      muted src={props.project.videoURL}\n      onMouseEnter={onVideoEnter}\n      onMouseLeave={onVideoLeave}\n      onPlay={onVideoPlay}\n    >\n      Video Unavailable\n    </video>\n  );\n}\n\nexport default Video;\n","import React from 'react';\n\nconst Title = props => {\n  return (\n    <p className=\"title\">\n      <a className=\"hyperLink\" href={props.project.link}>{props.project.title}</a>\n    </p>\n\n  );\n}\n\nexport default Title;\n","import React from 'react';\n\nconst Comment = props => {\n  console.log(props.comment,' THIS IS COMMENT! BOTTOM CHAIN')\n  console.log(Object.values(props.comment),'object values')\n  return (\n    <div>\n      {Object.keys(props.comment)} : {Object.values(props.comment)}\n    </div>\n\n  );\n}\n\nexport default Comment;\n","import React, { Component } from 'react';\nimport Comment from './Comment';\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n    // console.log(props,' from main');\n    this.state = {\n      showCommentForm: true,\n      comment: '',\n      author: '',\n    }\n  }\n\n  onCreateComment = (e) => {\n    e.preventDefault();\n    if(this.state.author === ''){\n      // this.state.author = 'Anonymous'\n      this.setState({author: 'Anonymous'})\n    }\n\n    this.props.onCreateComment({\n      projectId: this.props.project.id,\n      comment: this.state.comment,\n      author: this.state.author,\n    })\n\n    this.resetForm();\n  }\n\n  resetForm() {\n    this.setState({\n      showCommentForm: false,\n      comment: '',\n      author: '',\n    })\n  }\n\n  onCommentChange = (e) => {\n    this.setState({\n      comment: e.target.value\n    })\n  }\n\n  onAuthorChange = (e) => {\n    this.setState({\n      author: e.target.value\n    })\n  }\n\n  toggleCommentForm = () => {\n    this.setState({ showCommentForm: !this.state.showCommentForm });\n  }\n\n\n  render() {\n    return (\n      <div className=\"commentSection\">\n\n        <div>\n          <button\n                  className=\"button button-default\"\n                  onClick={this.toggleCommentForm}\n          >\n            + New Comment\n          </button>\n\n          {this.props.project.comment !== undefined ? (<div>{this.props.project.comment.map((each, index) =>\n\n            <Comment\n              key={index}\n              comment={each}\n            />\n          )}</div>) : 'no comments yet'}\n        </div>\n\n\n\n        {this.state.showCommentForm && (\n          <form\n            className=\"task-list-form\"\n            onSubmit={this.onCreateComment}\n          >\n\n            <input\n              className=\"full-width-input\"\n              onChange={this.onAuthorChange}\n              value={this.state.author}\n              type=\"text\"\n              placeholder=\"author...\"\n            />\n            <textarea rows=\"2\" cols=\"20\" wrap=\"hard\"\n              className=\"full-width-input full-height-input\"\n              onChange={this.onCommentChange}\n              value={this.state.comment}\n              type=\"text\"\n              placeholder=\"comment...\"\n            >\n\n            </textarea>\n\n            <button\n              className=\"button\"\n              type=\"submit\"\n            >\n              Save\n            </button>\n          </form>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n\n/*\n<div className=\"task-list-title\">\n  <strong>{props.status}</strong>\n</div>\n{props.tasks.map(task => (\n  <Task\n    key={task.id}\n    task={task}\n    onStatusChange={props.onStatusChange}\n    onDropTask={props.onDropTask}\n    onTaskDetail={props.onTaskDetail}\n  />\n))}\n\n\n\n\n\n//ref\n{props.task.detailShow ? <hr /> : ''}\n{props.task.detailShow ? (<div className=\"task-detail\"> <div>{props.task.detail} </div> </div>) : ''}\n*/\n","import axios from 'axios';\n\n\n// const API_BASE_URL = 'http://localhost:3535';\nconst API_BASE_URL = 'https://wooyongpark.com';\n// https://localhost:27017'   //bc localhost doesn't need https\n//change this to https://wooyongpark.com when deploying\n\n// axios.create takes in an object with baseURL and headers\nconst client = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\nexport function fetchProjects() {\n  return client.get('/portfolio/db');\n}\n\nexport function createComment(params) {\n  console.log(params,'before axios posts')\n\n  return axios({\n    method: 'post',\n    url: `${API_BASE_URL}/portfolio/db/comment`,\n    params: {\n      projectId: params.projectId,\n      comment: params.comment,\n      author: params.author\n    }\n});\n}\n\nexport function pressButton(addCountPost) {\n  return axios({\n    method: 'post',\n    url: `${API_BASE_URL}/portfolio/db`,\n    params: addCountPost\n  })\n}\n","import React from 'react';\n// import axios from 'axios';\nimport * as api from '../../api'\nimport ReactGA from 'react-ga';\n\nconst EmojiButton = props => {\n\n\n  // const clickHandler = () => {\n  //   ReactGA.event({\n  //     category: 'Button',\n  //     action: 'Pressed Like Button'\n  //   });\n  // }\n  function onThumbsUp() {\n    props.onThumbsUp(props.project.id);\n      ReactGA.event({\n        category: 'Emoji Button',\n        action: `id # ${props.project.id} pressed -> counts : ${props.project.counts}`\n      });\n\n    let addCountPost = {\n      id: props.project.id,\n      counts: props.project.counts,\n    }\n\n    // const API_BASE_URL = 'http://localhost:3535';\n    //\n    // // axios.create takes in an object with baseURL and headers\n    // const client = axios.create({\n    //   baseURL: API_BASE_URL,\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    // })\n    //\n    // client.post('/portfolio/db', { ...addCountPost});\n\n    // axios.post('http://localhost:3535/portfolio/db', addCountPost, {\n    //      headers: {\n    //           'content-type': 'application/json',\n    //      },\n    // })\n    // .then(res => console.log(res.data,'retrieved'))\n    // .then(success => {\n    //   console.log(success,'success');\n    // })\n\n    // axios({\n    //   method: 'post',\n    //   url: 'https://wooyongpark.com/portfolio/db',\n    //   params: addCountPost\n    // })\n    // .then(res => console.log(res.data,'retrieved')) //update the store here\n\n    api.pressButton(addCountPost)\n    .then(res => console.log(res.data,'retrieved')) //update the store here\n  }\n\n\n\n\n  return (\n    <div className=\"emojiButton\">\n      <span>Like </span>\n      <button\n        onClick={onThumbsUp}\n        className=\"eButton\"\n      >\n        {props.project.counts}{'\\u2728'}\n      </button>\n    </div>\n  );\n}\n\nexport default EmojiButton;\n","import React from 'react';\nimport Video from './Video';\n// import Description from './Description';\nimport Title from './Title';\nimport Comments from './Comments';\nimport EmojiButton from './EmojiButton';\n\n\nconst Cinema = props => {\n\n\n  return(\n    <div className=\"cinema\">\n      <div className=\"sideBlock sideBlockLeft\">\n        <Title\n          project={props.project}\n        />\n\n        <EmojiButton\n          onThumbsUp={props.onThumbsUp}\n          project={props.project}\n        />\n      </div>\n      <div className=\"scene\">\n        <Video\n          onVideoLeave={props.onVideoLeave}\n          onVideoEnter={props.onVideoEnter}\n          project={props.project}\n        />\n      </div>\n      <div className=\"sideBlock sideBlockRight\">\n        {/*<Description\n          project={props.project}\n          onThumbsUp={props.onThumbsUp}\n        />*/}\n        <Comments\n          project={props.project}\n          onCreateComment={props.onCreateComment}\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default Cinema;\n\n\n/*\n  {props.project.map(project => (\n    <Video\n      key={project.id}\n      project={project}\n    />\n\n\n  ))}\n\n        <Description\n          key={project.id}\n          project={project}\n        />\n        */\n","import * as api from '../api';\n\n/*\nconst mockProjects = [\n  {\n    id: 1,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/wave',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n    counts: 0\n\n  },\n  {\n    id: 2,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/',\n    videoURL:'./vids/altgenerator_0x.mp4',\n    counts: 0,\n  },\n  {\n    id: 3,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n    counts: 0,\n  },\n  {\n    id: 4,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n  {\n    id: 5,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n  },\n  {\n    id: 6,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n  {\n    id: 7,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n  },\n  {\n    id: 8,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n  {\n    id: 9,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n  },\n  {\n    id: 10,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n  {\n    id: 11,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n  },\n  {\n    id: 12,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n  {\n    id: 13,\n    title: 'Wave Generator',\n    description: 'wave descrip',\n    link: '/whatever',\n    videoURL: './vids/wavegenerator_0x_540p.mp4',\n  },\n  {\n    id: 14,\n    title: 'Alt Tage Generator',\n    description: 'temp',\n    link: '/whatever',\n    videoURL:'./vids/altgenerator_0x.mp4',\n  },\n]\n*/\n\n// export function fetchProjects(projects) {\n//   return {\n//     type: 'RECEIVE_ENTITIES',\n//     payload: {\n//       projects: mockProjects\n//     }\n//   }\n// }\n\nfunction fetchProjectsStarted(boards) {\n  return { type: 'FETCH_PROJECTS_STARTED', payload: { boards } };\n}\n\nfunction fetchProjectsFailed(err) {\n  return { type: 'FETCH_PROJECTS_FAILED', payload: err };\n}\n\nfunction receiveEntities(entities) {\n  return {\n    type: 'RECEIVE_ENTITIES',\n    payload: {\n        projects: entities\n    }\n  }\n}\n\nexport function fetchProjects() {\n  return (dispatch, getState) => {\n    dispatch(fetchProjectsStarted());\n\n    return api\n      .fetchProjects()\n      .then(resp => {\n        // console.log(resp.data,'resp');\n\n        dispatch(receiveEntities(resp.data))\n      })\n      .catch(err => {\n        fetchProjectsFailed(err);\n      })\n  }\n}\n\n\nexport function thumbsUp(projectId) {\n  return {\n    type: 'COUNT_UP',\n    payload: {\n      projectId: projectId\n    }\n  }\n}\n\n\nfunction recieveComment(entities){\n  console.log(entities,'ENTITIES');\n  const {id, comment} = entities //PROBLEM WHOLE BUNCH\n  return {\n    type: 'CREATE_COMMENT',\n    payload: {\n      projectIdComment: id,\n      comment: [...comment]\n    }\n  }\n}\n\nfunction createCommentStarted() {\n  return { type: 'CREATE_COMMENT_STARTED' };\n}\n\nfunction createCommentFailed() {\n  return { type: 'CREATE_COMMENT_FAILED' }\n}\n\nexport function createComment(projectId, comment, author) {\n  return (dispatch, getState) => {\n    dispatch(createCommentStarted());\n\n    return api\n      .createComment({projectId, comment, author})\n      .then(resp => {\n        console.log(resp, 'response after post');\n        dispatch(recieveComment(resp.data[0]))\n      })\n      .catch(err => {\n        createCommentFailed(err);\n      })\n  }\n}\n\n\n//\n// export function createComment(projectId, comment) {\n//   return {\n//     type: 'CREATE_COMMENT',\n//     payload: {\n//       projectIdComment: projectId,\n//       comment: comment\n//     }\n//   }\n// }\n","import React from 'react';\n// import EmojiButton from './EmojiButton';\n\nconst Description = props => {\n  return (\n    <div className=\"description\">\n      <p>{props.project.description}</p>\n      {/*\n        <EmojiButton\n          onThumbsUp={props.onThumbsUp}\n          project={props.project}\n        />\n        */}\n\n    </div>\n\n  );\n}\n\nexport default Description;\n","import React from 'react';\nimport Description from './Description';\n\n\n\nconst VideoMargin = props => {\n  return(\n    <div className=\"\">\n      <Description\n        project={props.project}\n        onThumbsUp={props.onThumbsUp}\n      />\n    </div>\n  )\n}\n\nexport default VideoMargin;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cinema from './Cinema';\nimport { thumbsUp, createComment } from './../../actions';\n// import Comments from './Comments';\nimport VideoMargin from './VideoMargin';\n\nconst logNodes = (projectId, sideBlockLeft, sideBlockRight, scene, video) => {\n  console.log(projectId,'projectid entering')\n  console.log(sideBlockRight,'sideBlockRight')\n  console.log(scene,'scene')\n  console.log(sideBlockLeft,'sideBlockLeft')\n}\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props,' from main');\n  }\n\n  onCreateComment = ({projectId, comment, author}) => {\n    this.props.dispatch(\n        createComment(projectId, comment, author)\n    );\n  }\n\n\n  onThumbsUp = (projectId) => {\n    console.log(projectId)\n    this.props.dispatch(thumbsUp(projectId));\n  }\n\n  onVideoLeave = (projectId, sideBlockLeft, sideBlockRight, scene, video) => {\n\n    video.pause();\n    logNodes(projectId, sideBlockLeft, sideBlockRight, scene, video);\n\n    let rotateAmount = 0;\n    sideBlockLeft.style.transform = `rotateY(${rotateAmount}deg)`;\n\n    sideBlockRight.style.transform = `rotateY(${rotateAmount}deg)`;\n\n\n\n    let pushback = 0;\n    scene.style.transform = `translateZ(-${pushback}px)`;\n\n    sideBlockLeft.style.marginLeft = '0px';\n    sideBlockRight.style.marginRight = '0px';\n  }\n\n\n\n  onVideoEnter = (projectId, sideBlockLeft, sideBlockRight, scene, video) => {\n    logNodes(projectId, sideBlockLeft, sideBlockRight, scene, video);\n\n    video.play();\n\n    let rotateAmount = 50;\n    sideBlockLeft.style.transform = `rotateY(-${rotateAmount}deg)`;\n\n    sideBlockRight.style.transform = `rotateY(${rotateAmount}deg)`\n\n    let length = 200;\n    let pushback = length *\n        (Math.sin(rotateAmount * Math.PI / 180) / Math.sin(90 * Math.PI / 180))\n    console.log(pushback)\n    scene.style.transform = `translateZ(-${pushback}px)`;\n\n    sideBlockLeft.style.marginLeft = '-70px';\n    sideBlockRight.style.marginRight = '-70px';\n\n  }\n\n  render () {\n    console.log(this.props,'after')\n    console.log(this.state,'after state')\n    return(\n      <div>\n        <div className=\"bar\"></div>\n        <div>{this.props.projectsLength > 0 ? <div>{this.props.projects.map(project =>\n          <div key={project.id}>\n            <Cinema\n\n              project={project}\n              projectsLength={this.props.projectsLength}\n              onVideoLeave={this.onVideoLeave}\n              onVideoEnter={this.onVideoEnter}\n              onThumbsUp={this.onThumbsUp}\n              onCreateComment={this.onCreateComment}\n            />\n            <div\n              className=\"bar\"\n            >\n              <VideoMargin\n                project={project}\n                onThumbsUp={this.onThumbsUp}\n              />\n              {\n                /*\n                <Comments\n                  project={project}\n                  onCreateComment={this.onCreateComment}\n                />\n                */\n              }\n\n            </div>\n\n          </div>\n        )}\n\n        </div> : ''}</div>\n      </div>\n\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n\n  const { projects, projectsLength } = state.page;\n\n  return {\n    projects:projects,\n    projectsLength: projectsLength,\n  };\n}\n\n\nexport default connect(mapStateToProps)(Main)\n\n\n// {props.projects.map(project => (\n//   <Cinema\n//     key={project.id}\n//     project={project}\n//   />\n// ))}\n","\nimport React from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\n// import p5 from \"p5\";\n// import { connect } from 'react-redux';\n// import { applyMiddleware } from 'redux';\nimport { useState, useEffect, useRef } from 'react';\n\nfunction sketch(p) {\n\n  // var boxColor = p.color('#172A3A');\n  // let xPos = 100;\n  // let yPos = 100;\n  // let unstartedLength = 0;\n\n  let status = '';\n  // let sketchAction = '';\n  // let lastAction = '';\n\n  let num = 20; //remembers 20 positions\n  let mouseXpos = [];\n  let mouseYpos = [];\n\n  // let panelPosX = p.windowWidth/2;\n  // let panelPosY = 0;\n\n  let panelLeftPosX = 0;\n  let panelLeftPosY = 0;\n\n  //dropBall\n  // let velocity = 0\n  // let y = 5\n  // let x = 33\n  // let radius = 15\n  // let acceleration = 0.3\n\n  // network\n  let nodesLength = 100; //initial\n  let nodes = [];\n  let nodeCount = 0;\n\n  // connecting with useState\n  let count\n  let setCount\n\n  // global\n  let animalsState\n  let setAnimalsState\n  let nodesState\n  let setNodesState\n\n  // animals nodes\n  let animalsNodes = []\n\n  let selectedNode;\n  let setSelectedNode;\n\n  let emojiString = \"🥩🍖🍗🍿🍽🍊🍓🍉🐾🦋🐣🥳😜😛\"\n  let tempSlice = Math.floor((Math.random() * emojiString.length/2))*2\n  let currentEmoji = emojiString.slice(tempSlice, tempSlice+2)\n\n  let offset = 100;\n\n  let innerRadius = 100\n  let outerRadius = 270\n\n  p.windowResized = function() {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n\n    // for (let i = 0; i < nodesLength; i ++) {\n    //   nodes[i].updateWindowPosition();\n    //   nodes[i].setRandomPosition();\n    // }\n\n    nodes.forEach(each => {\n      each.updateWindowPosition()\n      each.setRandomPosition();\n    })\n\n    animalsNodes.forEach(each => {\n      each.updateWindowPosition()\n      each.setAnimalsPosition();\n    })\n  }\n\n\n  p.myCustomRedrawAccordingToNewPropsHandler = function(props) {\n    // alert('props incoming');\n    if(props.selectedNode) {\n      [selectedNode, setSelectedNode] = props.selectedNode\n    }\n\n    if (props.countState) {\n      [count, setCount] = props.countState;\n      // console.log(count,'COUNT ACCESS')\n    }\n\n    if (props.animalsState) {\n      [animalsState, setAnimalsState] = props.animalsState\n    }\n\n    if(props.nodesState) {\n\n      [nodesState, setNodesState] = props.nodesState\n      // console.log(nodesState,'NNNNN AME')\n      nodeCount = nodesState.length\n\n\n      if(nodeCount < nodes.length) {\n        // nodes[nodeCount].setPosition();\n        nodes[nodeCount].setRandomPosition();\n        // console.log(nodes[nodeCount],'New node')\n        // nodeCount += 1;\n        for (let i = 0; i < nodeCount; i ++) {\n          // nodes[i].display();\n          // nodes[i].displayNetwork(nodeCount);\n          // nodes[i].displayFriends(nodeCount)\n          // nodes[i].displayInterests(nodeCount);\n          nodes[i].updateInterests();\n        }\n      }\n    }\n    if (props.state) {\n      // console.log(props.state,'state -> from p5')\n    }\n\n    p.mouseClicked = () => {\n\n      for (let i = 0; i < nodeCount; i ++) {\n        // nodes[i].onMouseClick()\n        if(nodes[i].onMouseClick()){\n          setSelectedNode(nodes[i].id)\n        }\n      }\n\n      setCount(count + 1)\n    }\n    p.mousePressed = () => {\n      for (let i = 0; i < nodesLength; i ++) {\n        // console.log(nodes[i],'CHECK THE UPDATE')\n      }\n    }\n\n    p.keyPressed = () => {\n      console.log(p.frameRate())\n      // boxColor = p.color(p.random(255),p.random(255),p.random(255));\n      // xPos += 100;\n      /*\n      your todos -> log in system\n      emoji changes -> everytime clicks\n      github -> push -> so that you can work on bigger computer too\n      */\n\n      let randomSlicePosition = Math.floor((Math.random() * emojiString.length/2))*2\n      // console.log(randomSlicePosition,'rs')\n      currentEmoji = emojiString.slice(randomSlicePosition,randomSlicePosition+2)\n\n      // sketchAction = 'ELLIPSE'\n\n      }\n    p.keyReleased = () => {\n      // sketchAction = 'SOMETHING'\n    }\n\n  } //okay this is special method nice\n\n\n  //sideEffects based on action.type\n\n\n\n\n  p.setup = function() {\n    // console.log('setup running', p);\n    p.ellipseMode(p.RADIUS);\n\n    // p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL);\n    p.createCanvas(p.windowWidth, p.windowHeight);\n\n    //for mouse\n    for (let i = 0; i < num; i++) {\n      mouseXpos[i] = 0;\n      mouseYpos[i] = 0;\n    }\n\n    // alert('secind')\n    for (let i = 0; i < nodesLength; i ++) {\n      let ranRadius = p.random(5, 10)\n      nodes[i] = new Node(i, nodes, ranRadius, animalsNodes);\n      nodes[i].setRandomPosition();\n    }\n\n    for (let i = 0; i < animalsState.length; i ++) {\n      animalsNodes[i] = new Node(100+i, nodes, 5, animalsNodes);\n      animalsNodes[i].setAnimalsPosition()\n      // animalsNodes[i].displayInterests(nodeCount); // but needs to be in draw\n      // animalsNodes[i].displayAnimals();\n    }\n\n\n\n\n  } // end of setup\n\n  // function toUTF16(codePoint) {\n  //   var TEN_BITS = parseInt('1111111111', 2);\n  //   function u(codeUnit) {\n  //     return '\\\\u'+codeUnit.toString(16).toUpperCase();\n  //   }\n  //\n  //   if (codePoint <= 0xFFFF) {\n  //     return u(codePoint);\n  //   }\n  //   codePoint -= 0x10000;\n  //\n  //   // Shift right to get to most significant 10 bits\n  //   var leadSurrogate = 0xD800 + (codePoint >> 10);\n  //\n  //   // Mask to get least significant 10 bits\n  //   var tailSurrogate = 0xDC00 + (codePoint & TEN_BITS);\n  //\n  //   return u(leadSurrogate) + u(tailSurrogate);\n  // }\n\n\n  class Node {\n    constructor(id, otherNodes, radius, animalsNodes){\n      this.x = null;\n      this.y = null;\n      this.radius = radius;\n      this.id = id;\n      this.otherNodes = otherNodes;\n      this.outerRadius = radius * 4;\n      this.friendsList = [1,2,3]\n      this.interests = [] //empty one for now?\n      this.animalsNodes = animalsNodes;\n      this.name = ''\n      // this.matchCounter = 0;\n      this.matchedInterests = {}\n      this.offsetX = p.windowWidth/2 + offset\n      this.offsetY = p.windowHeight/2\n      this.nodeColor = 255;\n      this.angle = p.radians(p.random(360));\n      this.alphaColor = 50\n\n\n      // need to define angle here?\n      //and change the animalsposX and this.x - not the offset\n      //can't do that cause it would stop repositioning\n\n      if(this.id >= 100) {\n        this.identity = 'animals'\n        this.fillColor = p.color(p.random(255),p.random(255),p.random(255),this.alphaColor);\n      } else {\n        this.identity = 'users'\n      }\n\n      // alert('second',nodesState)\n      nodesState.forEach(each => {\n        if(this.id === each.id) {\n          this.interests = each.interests\n          // console.log(this, 'THEY MATCHED')\n          this.name = each.name   // this is used for initial setups\n          this.nodeColor = p.color(p.random(255),p.random(255),p.random(255),this.alphaColor);\n\n        }\n      })\n\n      animalsState.forEach(each => {\n        if(this.id === each.id) {\n          this.interests = each.interests\n          this.name = each.name\n\n          let randomSlice = Math.abs(Math.floor(((Math.random() * each.emojiSurrogates.length-2)/2))*2)\n\n          // console.log('rannumm',randomSlice)\n          this.emojiSurrogates = each.emojiSurrogates.slice(randomSlice,randomSlice+2)\n        }\n      })\n\n      // if(this.id == 100) {\n      //   this.interests = animalsState[0].interests\n      // }\n\n      // this.animalsPosX = p.random(500)\n      // this.animalsPosY = p.random(500)\n\n      // console.log(this, `# ${this.id} node`);\n\n    }\n\n    updateWindowPosition() {\n      this.offsetX = p.windowWidth/2 + offset\n      this.offsetY = p.windowHeight/2\n    }\n\n    static setAnimalsCircle() {\n\n      let offsetX = p.windowWidth/2 + offset\n      let offsetY = p.windowHeight/2\n      let radius = innerRadius\n      for(let deg = 0; deg < 360; deg += 12) {\n        let angle = p.radians(deg)\n        let circleX = offsetX + (p.cos(angle) * radius);\n        let circleY = offsetY + (p.sin(angle) * radius);\n        p.fill(0,30)\n        p.ellipse(circleX, circleY, 1, 1)\n      }\n    }\n\n    static setNodesCircle() {\n\n      let offsetX = p.windowWidth/2 + offset\n      let offsetY = p.windowHeight/2\n      let radius = outerRadius\n      for(let deg = 0; deg < 360; deg += 12) {\n        let angle = p.radians(deg)\n        let circleX = offsetX + (p.cos(angle) * radius);\n        let circleY = offsetY + (p.sin(angle) * radius);\n        p.fill(0,30)\n        p.ellipse(circleX, circleY, 1, 1)\n      }\n    }\n\n\n\n    updateInterests(){\n      nodesState.forEach(each => {\n        if(this.id === each.id) {\n          this.interests = each.interests\n          // console.log(this, 'THEY MATCHED')\n          this.name = each.name   //also updating name - so that when new one comes, it renders the most recent updated value - derived from the props.state\n        }\n      })\n    }\n\n\n    setPosition() {\n      this.x = p.mouseX;\n      this.y = p.mouseY;\n    }\n\n    setAnimalsPosition() {\n      // let angle = p.radians(p.random(360))\n      this.animalsPosX = this.offsetX + (p.cos(this.angle)* innerRadius)\n      this.animalsPosY = this.offsetY + (p.sin(this.angle)* innerRadius)\n    }\n\n    setRandomPosition() {\n      // let angle = p.radians(p.random(360))\n      this.x = this.offsetX + (p.cos(this.angle)*outerRadius)\n      this.y = this.offsetY + (p.sin(this.angle)*outerRadius)\n    }\n\n    displayAnimals() {\n      // p.fill(this.fillColor);\n      // p.ellipse(this.animalsPosX,this.animalsPosY,this.radius,this.radius)\n      // p.textAlign(p.CENTER,p.CENTER);\n\n\n      // p.text(`${this.name} id${this.id}`,this.animalsPosX, this.animalsPosY)\n      // '\\uD83D\\uDC36'\n      // \"\\uD83D\\uDE00\"\n\n      // let uraw = toUTF16(128512) //doesn't work\n      // let tryu = String.fromCodePoint(parseInt(2222, 16))\n      // console.log(tryu, typeof this.emojiSurrogates)\n\n      function findSurrogatePair(point) {\n        // assumes point > 0xffff\n        var offset = point - 0x10000,\n            lead = 0xd800 + (offset >> 10),\n            trail = 0xdc00 + (offset & 0x3ff);\n        return [lead.toString(16), trail.toString(16)];\n      }\n      let foundd = findSurrogatePair(0x1f600);\n      // let ansr = ''+`\\${foundd[0]}`+ '\\u'+`${foundd[1]}`\n      // \\u{1F603} THIS WORKS\n      // '\\u{1F493}' WORKS as well\n        p.textSize(30);\n\n        // let te = ['🥩,'🍖']\n        p.text(`${this.emojiSurrogates}`,this.animalsPosX, this.animalsPosY)\n        p.textSize(12);\n\n    }\n\n    display() {\n      p.fill(this.nodeColor);\n      p.ellipse(this.x,this.y,this.radius,this.radius)\n      p.fill(22);\n      p.strokeWeight(0.7);\n      // p.text(`${currentEmoji}`,this.x,this.y)\n      // p.ellipse(this.x, this.y, this.outerRadius, this.outerRadius)\n      p.textAlign(p.CENTER,p.CENTER);\n      p.text(`${this.name}`,this.x, this.y)\n    }\n\n    overlap(n) {\n      let distanceFromCenters = p.dist(this.x, this.y, n.x, n.y);\n      let diameter = this.outerRadius + n.outerRadius;\n      if (distanceFromCenters < diameter) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n\n    onMouseOver() {\n      let mouseDistanceFromCenters = p.dist(this.x, this.y, p.mouseX, p.mouseY);\n      if (mouseDistanceFromCenters < this.radius){\n          this.nodeColor = p.color(p.random(255),p.random(255),p.random(255));\n            //\n          // this.fillColor = p.color(p.random(255),p.random(255),p.random(255));\n      } else {\n        this.nodeColor = p.color(255,255,255)\n      }\n    }\n\n    onMouseClick() {\n      let mouseDistanceFromCenters = p.dist(this.x, this.y, p.mouseX, p.mouseY);\n      if (mouseDistanceFromCenters < this.radius){\n        // alert('clicked lets lift state')\n        return true\n      } else {\n        return false\n      }\n    }\n\n\n    trueFriends(n) {\n      p.stroke(20)\n      if(n.id in this.friendsList === true) {\n        return true\n      } else {\n        return false;\n      }\n    }\n\n    displayNetwork(nodeCount) {\n      p.stroke(5)\n\n      // console.log(this.id, nodeCount)\n      for (let i = this.id+1; i < nodeCount; i ++) {\n        if(this.overlap(this.otherNodes[i])) {\n          p.line(this.x, this.y, this.otherNodes[i].x, this.otherNodes[i].y)\n        }\n      }\n    }\n\n    overlapSoReposition(n) {\n      let distanceFromCenters = p.dist(this.x, this.y, n.x, n.y);\n      let diameter = this.outerRadius + n.outerRadius;\n      if (distanceFromCenters - diameter < -10) {\n        // this.radius = p.random(2, 7) //resize\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    overlapSoRepositionAnimals(n) {\n      let distanceFromCenters = p.dist(this.animalsPosX, this.animalsPosY, n.animalsPosX, n.animalsPosY);\n      let diameter = this.radius + n.radius;\n      let extraDistance = 15;\n      if (distanceFromCenters - (diameter + extraDistance) <= 0) {\n        // console.log(distanceFromCenters, diameter, 'true',this.id)\n\n        return true;\n      } else {\n        // console.log(distanceFromCenters, diameter, 'false',this.id)\n        return false;\n      }\n    }\n\n    reposition(nodeCount) {\n      for (let i = this.id+1; i < nodeCount; i ++) {\n        if(this.overlapSoReposition(this.otherNodes[i])) {\n          this.angle = p.radians(p.random(360))\n\n          this.setRandomPosition();\n        }\n      }\n    }\n\n    repositionAnimals(nodeCount) {\n      for (let i = this.id+1; i < (100 + nodeCount); i ++) {\n        if(this.overlapSoRepositionAnimals(this.animalsNodes[i - 100])) {\n          this.angle = p.radians(p.random(360))\n          this.setAnimalsPosition();\n        }\n      }\n    }\n\n\n    // sameInterests(n) {\n    //   p.stroke(6);\n    //\n    //   // console.log(n.interests,'n interests')\n    //   animalsState.forEach(each => {  //['c','d']\n    //     // console.log(each.interests, 'each.interests')\n    //     this.findCommonElements3(n.interests, each.interests)\n    //   })\n    //\n    //   // n.interests.forEach(each => {\n    //   //   if(each in animalsState.interests) {\n    //   //     return true\n    //   //   } else {\n    //   //     return false\n    //   //   }\n    //   // })\n    //\n    //\n    // }\n    //\n    // displayInterests(nodeCount) {\n    //   for (let i = this.id+1; i < animalsNodes.length; i ++) {\n    //     if(this.sameInterests(this.animalsNodes[i])) {\n    //       p.line(this.x, this.y, 0,0)\n    //     }\n    //   }\n    // }\n\n    findCommonElements3(arr1, arr2) {\n      arr2.forEach(each => {\n        arr1.some(item => {\n          each.interests.includes(item)\n          // console.log('common found', item)\n          return true\n        })\n        return false\n        // if( arr1.some(item => each.interests.includes(item)) ) {\n        //\n        //   return true\n        // } else {\n        //   return false\n        // }\n      })\n\n    }\n\n    sameInterests(n) {\n      //n is the other nodes\n      // let ans = this.findCommonElements3(n.interests, this.animalsNodes)\n      let matchFound = false;\n      // console.log(this.interests,'THIS DOT INTERESTS')\n      n.interests.forEach(each => {\n        // console.log(each,'EACH')\n        // if(each.includes(\"A\")) {\n        //   return true;\n        // } else {\n          // console.log('what')\n        // }\n        // console.log(this.interests,'tis inter')\n        // console.log(each, 'N - EACH INTEREST')\n\n        if(this.interests.includes(each)) {\n          // console.log('HELL YA', each)\n          matchFound = true;\n\n          // if(!n.matchedInterests.includes(each)) {\n          //   n.matchedInterests.push(each)\n          // }\n          if(this.id in n.matchedInterests) {\n            if(!n.matchedInterests[this.id].includes(each)) {\n              n.matchedInterests[this.id].push(each)\n            }\n          } else {\n            n.matchedInterests[this.id] = [each]\n          }\n          // n.matchCounter += 1;         //LEO fix this\n          // return\n        }\n        // if(each in this.interests === true) {\n        //   // console.log(each, 'found in ',each.id)\n        //   console.log(each,'found found')\n        // //\n        // //   matchFound = true\n        // //   return true;\n        // }\n        // return false\n\n\n        // this.animalsNodes.forEach(item => {\n        //   if (item.interests.includes(each)) {\n        //     matchFound = true;\n        //   }\n        // })\n      })\n      return matchFound\n\n\n\n\n\n\n      //\n      // let ans = this.animalsNodes.forEach(each => {\n      //   if(n.interests.some(item => each.interests.includes(item))) {\n      //     return true;\n      //   }else{\n      //     return false;\n      //   }\n      // })\n      // console.log(ans,'ans')\n\n      // let ans = this.animalsNodes.forEach(each => n.interests.some(item => each.interests.includes(item)))\n      //\n      // if (ans) {\n      //   return true\n      // } else {\n      //   return false\n      // }\n\n    }\n\n    displayInterests(nodeCount) {\n      // from nodes view\n      // need to go from many to small - right now its small to many\n      for (let i = 0; i < nodeCount; i ++) {\n        if(this.sameInterests(this.otherNodes[i])) {\n\n\n          if(this.otherNodes[i].onMouseClick()) {\n            p.stroke(p.color(p.random(255),p.random(255),p.random(255),150))\n          } else {\n            p.stroke(this.fillColor)\n          }\n\n          // p.strokeWeight(this.otherNodes[i].matchedInterests.length * 5)\n          let sweight = this.otherNodes[i].matchedInterests[this.id].length\n          p.strokeWeight(sweight * 5)\n          p.line(this.animalsPosX, this.animalsPosY, this.otherNodes[i].x, this.otherNodes[i].y)\n          p.stroke(0)\n          p.strokeWeight(1)\n          // alert('wait')\n        }\n\n      }\n    }\n\n    //need a counter that counts how significant is the interest - among two\n\n    displayFriends(nodeCount) {\n      for (let i = this.id+1; i < nodeCount; i ++) {\n        if(this.trueFriends(this.otherNodes[i])) {\n          p.line(this.x, this.y, this.otherNodes[i].x, this.otherNodes[i].y)\n        }\n      }\n    }\n\n  }\n\n\n  p.draw = function() {\n    // p.translate(-p.width/2,-p.height/2,0); //for webgl\n    // p.frameRate(5);\n\n    p.clear()\n    Node.setAnimalsCircle();\n    Node.setNodesCircle();\n    // followMouse();\n    mouseEllipse();\n\n    for (let i = 0; i < nodeCount; i ++) {\n      nodes[i].display();\n      nodes[i].displayNetwork(nodeCount);\n      nodes[i].reposition(nodeCount);\n      nodes[i].onMouseOver();\n\n      // nodes[i].displayFriends(nodeCount)\n      // nodes[i].displayInterests(nodeCount);\n      // nodes[i].updateInterests();\n      // if(p.windowResized){\n          // nodes[i].updateWindowPosition()\n      // }\n\n    }\n\n    for (let i = 0; i < animalsState.length; i ++) {\n\n      animalsNodes[i].displayAnimals();\n      // animalsNodes[i].displayInterests(animalsNodes.length);\n      animalsNodes[i].displayInterests(nodeCount);\n      animalsNodes[i].repositionAnimals(animalsNodes.length)\n    }\n\n    p.push()\n    p.textSize(50)\n    p.text(`${currentEmoji}`, p.width/2 - 200, 150)\n    p.textSize(12)\n    p.pop()\n    // p.fill(boxColor);\n    // p.rect(xPos, yPos + unstartedLength, 100, 100);\n\n    p.fill(0);\n    p.text(`${status}`, 10, 30);\n    // p.blendMode(p.BLEND);\n\n\n\n\n\n  } // end of draw\n\n\n  function mouseEllipse() {\n    // console.log('folowing??')\n    p.stroke(1);\n    p.noFill();\n    p.ellipse(p.mouseX, p.mouseY, 15, 15)\n  }\n}// end of sketch\n\n\nconst initialNodes = [\n  {\n    id: 0,\n    interests: ['T','I','G','E','R','D','O'],\n    name:'tiger person',\n  },\n  {\n    id: 1,\n    interests: ['D','O','G'],\n    name:'dog person',\n  },\n  {\n    id: 2,\n    interests: ['L','I','O','N','D','H'],\n    name:'Lion person',\n  },\n  {\n    id: 3,\n    interests: ['C','A','T'],\n    name:'Cat person',\n  },\n  {\n    id: 4,\n    interests: ['D','O','L','P','H','I','N'],\n    name:'Dolphin person',\n  }\n]\n/*\nconst initialAnimals = [\n  {\n    id:100,\n    name: 'TIGER',\n    interests: ['T','I','G','E','R'],\n  },\n  {\n    id:101,\n    name:'DOG',\n    interests: ['D','O','G'],\n  },\n  {\n    id:102,\n    name:'LION',\n    interests: ['L','I','O','N'],\n  },\n  {\n    id:103,\n    name:'CAT',\n    interests: ['C','A','T'],\n  },\n  {\n    id:104,\n    name:'DOLPHIN',\n    interests: ['D','O','L','P','H','I','N'],\n  }\n]\n*/\n\n//need to create a word bank - let them choose at ease\n\n\n\nconst initialAnimals = [\n  {\n    id:100,\n    name: 'Cheerful',\n    interests: [ \"Joyful\", \"Animated\", \"Buoyant\", \"Cheery\", \"Chipper\", \"Chirpy\", \"Effervescent\", \"Enthusiastic\", \"Good-Natured\", \"Jaunty\", \"Jolly\", \"Bright\", \"Lighthearted\", \"Lively\", \"Merry\", \"Optimistic\", \"Peppy\", \"Perky\", \"Pleasant\", \"Rosy\", \"Sanguine\", \"Sunny\", \"Upbeat\" ],\n    emojiSurrogates: \"🥩🍖🍗🍿🍽🍊🍓🍉🐾🦋🐣🥳😜😛\",\n    // \\uD83D\\uDE00\n  },\n  {\n    id:101,\n    name:'Reflective',\n    interests: [ \"Reflective\", \"Thoughtful\", \"Introspective\", \"Contemplative\", \"Meditative\", \"Pensive\", \"Studious\", \"Deliberate\", \"Diligent\", \"Earnest\", \"Industrious\", \"Calculated\", \"Careful\", \"Meticulous\", \"Cautious\", \"Premeditated\", \"Prudent\", \"Purposeful\", \"Cold-Blooded\", \"Conscious\", \"Bookish\", \"Willful\" ],\n    emojiSurrogates: \"🚶\",\n  },\n  {\n    id:102,\n    name:'Gloomy',\n    interests: [ \"Dull\", \"Gloomy\", \"Murky\", \"Funereal\", \"Dismal\", \"Bleak\", \"Cloudy\", \"Dark\", \"Impenetrable\", \"Dim\", \"Opaque\", \"Overcast\", \"Foggy\", \"Forlorn\", \"Frosty\", \"Weighty\", \"Dirty\", \"Grim\", \"Hazy\", \"Blurred\", \"Impassable\", \"Bulletproof\", \"Impervious\", \"Melancholy\", \"Misty\", \"Mournful\", \"Muddy\", \"Dreary\", \"Dense\", \"Earnest\", \"Sedate\", \"Serious\", \"Sober\", \"Solemn\", \"Solid\", \"Somber\", \"Thick\", \"Heavy\" ],\n    emojiSurrogates: \"🌌🌃🏙\",\n  },\n  {\n    id:103,\n    name:'Humorous',\n    interests: [ \"Droll\", \"Entertaining\", \"Amusing\", \"Comical\", \"Engaging\", \"Enjoyable\", \"Pleasant\", \"Pleasing\", \"Fun\", \"Delicious\", \"Delightful\", \"Diverting\", \"Beautiful\", \"Eccentric\", \"Enchanting\", \"Campy\", \"Captivating\", \"Charming\", \"Fascinating\", \"Comic\", \"Funny\", \"Gratifying\", \"Hilarious\", \"Humorous\", \"Interesting\", \"Lively\", \"Lovely\", \"Luscious\", \"Mischievous\", \"Odd\", \"Playful\", \"Alluring\", \"Delectable\", \"Refreshing\", \"Satisfying\", \"Thrilling\", \"Unusual\", \"Weird\", \"Whimsical\" ],\n    emojiSurrogates: \"🏑🏒🥍🏹🥋🥊🏂🌆🎑\", //something wrong here\n  },\n  {\n    id:104,\n    name:'Melancholy',\n    interests: [ \"Sad\", \"Deplorable\", \"Distressing\", \"Dreadful\", \"Mournful\", \"Painful\", \"Tragic\", \"Lamentable\", \"Dire\", \"Appalling\", \"Downbeat\", \"Downcast\", \"Atrocious\", \"Egregious\", \"Excruciating\", \"Flagrant\", \"Frightening\", \"Glaring\", \"Gloomy\", \"Grim\", \"Harrowing\", \"Heartbreaking\", \"Heartrending\", \"Heinous\", \"Intolerable\", \"Agonizing\", \"Low\", \"Lugubrious\", \"Melancholy\", \"Monstrous\", \"Moody\", \"Blue\", \"Outrageous\", \"Calamitous\", \"Pensive\", \"Plaintive\", \"Poignant\", \"Regrettable\", \"Damaging\", \"Shameful\", \"Shocking\", \"Somber\", \"Sorrowful\", \"Sorry\", \"Touching\", \"Affecting\", \"Trite\", \"Troublesome\", \"Unbearable\", \"Wistful\" ],\n    emojiSurrogates: \"🌗🌱🍃🍂🐚🗻🧖\",\n  },\n  {\n    id:105,\n    name:'Idyllic',\n    interests: [ \"Pastoral\", \"Admire\", \"Beautiful\", \"Bloodless\", \"Bucolic\", \"Calm\", \"Charming\", \"Colorful\", \"Dream\", \"Glorify\", \"Harmonious\", \"Idealized\", \"Neutral\", \"Nonviolent\", \"Amicable\", \"Peace-Loving\", \"Peaceful\", \"Picturesque\", \"Placid\", \"Pleasant\", \"Quaint\", \"Quiet\", \"Rustic\", \"Scenic\", \"Smooth\", \"Steady\", \"Tranquil\", \"Unspoiled\" ],\n    emojiSurrogates: \"💍👗💃🧝🧝🤱💇💇‍\",\n  },\n  {\n    id:106,\n    name:'Whimsical',\n    interests: [ \"Funny\", \"Whimsical\", \"Eccentric\", \"Entertaining\", \"Erratic\", \"Humorous\", \"Odd\", \"Quirky\", \"Weird\", \"Absurd\", \"Arbitrary\", \"Bizarre\", \"Farcical\", \"Fickle\", \"Flighty\", \"Careless\", \"Goofy\", \"Helter-Skelter\", \"Comic\", \"Idiosyncratic\", \"Impulsive\", \"Ironic\", \"Kooky\", \"Amusing\", \"Ludicrous\", \"Mischievous\", \"Nutty\", \"Comical\", \"Offbeat\", \"Outlandish\", \"Peculiar\", \"Curious\", \"Ridiculous\", \"Silly\", \"Strange\", \"Temperamental\", \"Unconventional\", \"Unpredictable\", \"Unreasonable\", \"Unstable\", \"Unusual\", \"Volatile\", \"Wacky\", \"Wayward\", \"Droll\", \"Laughable\" ],\n    emojiSurrogates: \"🧨📯⏲⏱🧭🕹🛴🏎🏍🤹\",\n  },\n  {\n    id:107,\n    name:'Romantic',\n    interests: [ \"Fantastic\", \"Adventurous\", \"Charming\", \"Colorful\", \"Corny\", \"Dreamy\", \"Erotic\", \"Exciting\", \"Exotic\", \"Fanciful\", \"Amorous\", \"Fascinating\", \"Glamorous\", \"Maudlin\", \"Mysterious\", \"Nostalgic\", \"Passionate\", \"Tender\", \"Utopian\", \"Whimsical\" ],\n    emojiSurrogates: \"🌹🌷💐🍷☕️🛫🚀🎢🎡🌋🛤\",\n  },\n  {\n    id:108,\n    name:'Mysterious',\n    interests: [ \"Enigmatic\", \"Mysterious\", \"Strange\", \"Weird\", \"Marvelous\", \"Dark\", \"Eerie\", \"Enchanted\", \"Enchanting\", \"Ambiguous\", \"Equivocal\", \"Extraordinary\", \"Fascinating\", \"Incomprehensible\", \"Inexplicable\", \"Inquisitive\", \"Inscrutable\", \"Interested\", \"Magic\", \"Magical\", \"Arcane\", \"Miraculous\", \"Baffling\", \"Mystical\", \"Mystifying\", \"Mythical\", \"Obscure\", \"Otherworldly\", \"Perplexing\", \"Puzzling\", \"Secretive\", \"Spellbinding\", \"Spooky\", \"Cryptic\", \"Uncanny\", \"Unknown\", \"Unusual\", \"Vague\", \"Veiled\", \"Curious\", \"Wonderful\" ],\n    emojiSurrogates: \"🛸🛰⚓️🗺🏰\",\n  },\n  {\n    id:109,\n    name:'Calm',\n    interests: [ \"Amicable\", \"Mild\", \"Placid\", \"Serene\", \"Congenial\", \"Cool\", \"Coordinated\", \"Cordial\", \"Easygoing\", \"Gentle\", \"Harmonious\", \"Low-Key\", \"Tranquil\", \"Balanced\", \"Peaceful\", \"Balmy\", \"Restful\", \"Sedate\", \"Calm\", \"Slow\", \"Smooth\", \"Sober\", \"Soothing\", \"Stable\", \"Tame\", \"Temperate\", \"Pastoral\" ],\n    emojiSurrogates: \"🧘🎹🧩🛶⛵️🧘🛁🛀🚿\",\n  },\n  {\n    id:110,\n    name:'Lighthearted',\n    interests: [ \"Lively\", \"Joyous\", \"Comical\", \"Flirtatious\", \"Frisky\", \"Good-Natured\", \"Impish\", \"Joking\", \"Jolly\", \"Jovial\", \"Cheerful\", \"Laid-Back\", \"Lighthearted\", \"Buoyant\", \"Mischievous\", \"Playful\", \"Spirited\", \"Sprightly\", \"Tongue-In-Cheek\", \"Upbeat\", \"Whimsical\" ],\n    emojiSurrogates: \"🌞🌼🌻🌟🐕🐩🐿🐒🙊🙉🐶🍷🥂🍻🍺\",\n  },\n  {\n    id:111,\n    name:'Hopeful',\n    interests: [ \"Buoyant\", \"Rosy\", \"Sanguine\", \"Hopeful\", \"Comfortable\", \"Confident\", \"Eager\", \"Encouraging\", \"Enthusiastic\", \"Greedy\", \"Happy\", \"Ambitious\", \"Hungry\", \"Impatient\", \"Keen\", \"Optimistic\", \"Positive\", \"Restless\", \"Cheerful\", \"Cheery\", \"Thirsty\", \"Trusting\", \"Upbeat\" ],\n    emojiSurrogates: \"👖🧶🧦🧢🏃🧚🤷\",\n  },\n  {\n    id:112,\n    name:'Angry',\n    interests:[ \"Fiery\", \"Affronted\", \"Angry\", \"Annoyed\", \"Antagonized\", \"Bitter\", \"Bothered\", \"Chafed\", \"Choleric\", \"Convulsed\", \"Cross\", \"Displeased\", \"Disturbed\", \"Enraged\", \"Exacerbated\", \"Exasperated\", \"Ferocious\", \"Fierce\", \"Angered\", \"Fuming\", \"Furious\", \"Galled\", \"Hateful\", \"Heated\", \"Impassioned\", \"Indignant\", \"Irate\", \"Irked\", \"Irritable\", \"Irritated\", \"Offended\", \"Outraged\", \"Provoked\", \"Resentful\", \"Sullen\", \"Troubled\", \"Uptight\" ],\n    emojiSurrogates: \"😡👿😾🦹🦹🧛🔪🗡⚔️🚬\",\n  },\n  {\n    id:113,\n    name:'Fearful',\n    interests: [ \"Panicky\", \"Afraid\", \"Anxious\", \"Shy\", \"Aroused\", \"Frightened\", \"Hesitant\", \"Jittery\", \"Nervous\", \"Agitated\", \"Scared\", \"Fearful\", \"Skittish\", \"Spooked\", \"Startled\", \"Tense\", \"Timid\", \"Uneasy\", \"Unnerved\" ],\n    emojiSurrogates: \"😨😰🙀🕳🦠💉🧫\",\n  },\n  {\n    id:114,\n    name:'Tense',\n    interests: [ \"Close\", \"Firm\", \"Rigid\", \"Stiff\", \"Strained\", \"Taut\" ],\n    emojiSurrogates: \"😡😠😾😖👺👿🤖💀\",\n  },\n  {\n    id:115,\n    name:'Lonely',\n    interests: [ \"Isolated\", \"Desolate\", \"Deserted\", \"Empty\", \"Lonely\", \"Eremitic\", \"Cloistered\", \"Derelict\", \"Abandoned\", \"Antisocial\", \"Destitute\", \"Apart\", \"Alone\", \"Forlorn\", \"Hermetic\", \"Homeless\", \"Homesick\", \"Ascetic\", \"Barren\", \"Lonesome\", \"Neglected\", \"Reclusive\", \"Solitary\", \"Uninhabited\" ],\n    emojiSurrogates: \"🐥🐦🐧🧴👅👩\",\n  },\n  // \\u{1F493}\n]\nfunction Sketch(props, action) {\n  const [count, setCount] = useState(0);\n  const [nodesState, setNodesState] = useState(initialNodes);\n  const [animalsState, setAnimalsState] = useState(initialAnimals)\n  const [nodeName, setNodeName] = useState('');\n  const [nodeInterest, setNodeInterest] = useState('');\n  const [nodeInterest2, setNodeInterest2] = useState('');\n  const [nodeInterest3, setNodeInterest3] = useState('');\n  const [nodeInterest4, setNodeInterest4] = useState('');\n  const [selectedNode, setSelectedNode] = useState(-1);\n  const [selectedNodeObject, setSelectedNodeObject] = useState('');\n\n  const inputEl = useRef(null)\n  const [inputBtnColor, setInputBtnColor] = useState('');\n\n  const [wordBank, setWordBank] = useState([])\n\n  // let a = ['1','2','3','4']\n  // let b = ['5','6','7','8']\n  // let c = ['9','10','11','12']\n  //\n  // let sum = [...a, ...b, ...c]\n\n  useEffect(()=>{\n    inputEl.current.focus();\n  },[])\n\n  //need to curry here\n  let wordCounts = 4\n  function randomItem(wordCounts){\n    return (...arrArg) => {\n      let copy = [...arrArg];\n      // console.log(copy,'cp')\n      let randomNumber = 0;\n      let returnArray = []\n      for (let i = 0; i < wordCounts; i++) {\n        randomNumber = Math.floor(Math.random() * copy.length)\n        returnArray.push(copy[randomNumber])\n        copy.splice(randomNumber,1)\n\n        // console.log(copy)\n      }\n      return returnArray\n    }\n  }\n  let chooseWords = randomItem(4) // currying\n  // let answer = chooseWords(...animalsState[0].interests, ...animalsState[1].interests, ...animalsState[2].interests);\n  // console.log(answer,'chosen')\n\n  function sentenceCase (str) {\n    if (str){\n      str = str.toString();\n       return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    }\n  }\n\n\n\n\n\n\n  const [selectedInput, setSelectedInput] = useState([]);\n  const [question1, setQuestion1] = useState(()=>{\n    return chooseWords(...animalsState[0].interests, ...animalsState[1].interests, ...animalsState[2].interests)}\n  )\n  const [question2, setQuestion2] = useState(()=>{\n    return chooseWords(...animalsState[0].interests, ...animalsState[1].interests, ...animalsState[2].interests)}\n  )\n\n  const onUpdateNode = (e) => {\n    e.preventDefault();\n\n    //need to loop nodesState - find matching one - map - have id number - if each id and selected id match - replace - return new arr object, use setnodesstate to update? this will change the position tho...\n\n    if(selectedNode > -1) {\n      const nextState = nodesState.map(each => {\n        if(each.id === selectedNode) {\n\n          if(selectedInput.length < 1) {\n            return each                     //ensures interests are selected\n          } else {\n            each.interests = selectedInput\n          }\n\n          return each\n        }\n        return each\n      })\n\n      setNodesState(nextState)\n\n      nodesState.forEach(each => {\n        if(each.id === selectedNode) {\n          setSelectedNodeObject(each)\n        }\n      })\n\n      // setSelectedNode(selectedNode)\n      setSelectedInput([])\n      //need to make buttons unclicked - white\n\n    }\n    setInputBtnColor('')\n  }\n\n  const onClickInputButton = (e) => {\n    e.preventDefault();\n    // console.log(e.target);\n\n    // if(inputBtnColor === 'grey'){\n    //    e.target.style.backgroundColor = 'null'\n    //   setInputBtnColor('')\n    //   if (!selectedInput.includes(e.target.value)){\n    //     setSelectedInput([...selectedInput, e.target.value])\n    //   }\n    // } else {\n    //   // setInputBtnColor('grey')\n    //   e.target.style.backgroundColor = 'grey'\n    //   if (selectedInput.includes(e.target.value)){\n    //     let copy = [...selectedInput]   //filter returns new arr so this is actually no needed\n    //     let filteredCopy = copy.filter((item)=> item !== e.target.value )\n    //     setSelectedInput(filteredCopy)\n    //   }\n    // }\n\n    if(e.target.style.backgroundColor !== 'grey') {\n      e.target.style.backgroundColor = 'grey'\n      if (!selectedInput.includes(e.target.value)){\n        setSelectedInput([...selectedInput, e.target.value])\n      }\n    } else {\n      e.target.style.backgroundColor = null\n      if (selectedInput.includes(e.target.value)){\n        let copy = [...selectedInput]   //filter returns new arr so this is actually no needed\n        let filteredCopy = copy.filter((item)=> item !== e.target.value )\n        setSelectedInput(filteredCopy)\n      }\n    }\n  }\n\n  useEffect(()=>{\n    // console.log(selectedInput)\n  },[selectedInput])\n\n  const resetForm = () => {\n    setNodeName('')\n    setNodeInterest('')\n    setNodeInterest2('')\n    setNodeInterest3('')\n    setNodeInterest4('')\n  }\n\n\n\n\n  const onCreateNode = (e) => {\n    e.preventDefault();\n    let newNode = {\n      id:nodesState.length,\n      interests: [nodeInterest, nodeInterest2, nodeInterest3, nodeInterest4],\n      name: nodeName,\n    }\n    // console.log(newNode, 'newNode')\n    setNodesState([...nodesState, newNode])\n    // console.log(nodesState,'NO STATE')\n\n    resetForm();\n  }\n\n  const onChangeNodeName = (e) => {\n    setNodeName(e.target.value)\n  }\n\n  const onChangeInterest = (e) => {\n    setNodeInterest(sentenceCase(e.target.value))\n  }\n\n  const onChangeInterest2 = (e) => {\n    setNodeInterest2(sentenceCase(e.target.value))\n  }\n\n  const onChangeInterest3 = (e) => {\n    setNodeInterest3(sentenceCase(e.target.value))\n  }\n\n  const onChangeInterest4 = (e) => {\n    setNodeInterest4(sentenceCase(e.target.value))\n  }\n\n  useEffect(()=>{\n    let chooseManyWords = randomItem(20);\n\n    setWordBank(chooseManyWords(...animalsState[0].interests, ...animalsState[1].interests, ...animalsState[2].interests))\n\n\n\n  },[nodesState])\n\n  useEffect(()=>{\n    let choose4Words = randomItem(4);\n    setQuestion1(chooseWords(...animalsState[0].interests, ...animalsState[1].interests, ...animalsState[2].interests))\n  },[selectedNode])\n\n\n\n\n  // const findNodeById = (id) => {\n  //   return\n  // }\n\n\n  const findIndexNumber = (array1, selectedNode) => {\n    return\n  }\n\n  useEffect(()=>{\n    // console.log(nodesState,'NO STATE from useeffect')\n    // let foundNode = nodesState.find((each)=>{console.log(each,'heheeh')})\n    // console.log(foundNode,'FOUND NODE')\n\n    if(selectedNode > -1) {\n        const found = nodesState.find(element => element.id === selectedNode);\n        // console.log(found,'found')\n\n        let selectedNodeIndex = nodesState.findIndex((element)=>{\n          return element.id === selectedNode\n        })\n\n\n\n        const nextNodesState = nodesState.map((obj, index) => {\n          let updatedNode;\n          if(index === selectedNodeIndex) {\n            setSelectedNodeObject(obj);\n\n            updatedNode = {\n              id: selectedNode,\n              interests: obj.interests,\n              name:obj.name,\n            }\n          }\n\n\n\n          return index === selectedNodeIndex ? updatedNode : obj;\n        })\n\n        // console.log(nextNodesState,'next nodes state')\n        setNodesState(nextNodesState)\n    }\n\n    /*\n\nconst updatedHeaders = typeElements.headers.map((obj, index) => {\n   return index === props.index ? props : obj;\n });\n\n    */\n\n\n  }, [selectedNode])\n\n  const divStyle = {\n    display: 'flex',\n  };\n  const flexWrap = {\n    display:'flex',\n    backgroundColor:'gainsboro',\n    flexWrap:'wrap',\n    width:'400px'\n  }\n  const spaceAround = {\n    padding: '1rem'\n  }\n\n  // let grey = {\n  //   backgroundColor: inputBtnColor\n  // }\n  const inputContainer = {\n    width: '400px',\n    display:'column',\n  }\n\n  return (\n    <div style={inputContainer}>\n      <h1>FIND YOUR EMOJI</h1>\n      {/*<p>You clicked {count} times</p>*/}\n      <p>So far, {nodesState.length} have participated!</p>\n      <hr/>\n      <br/>\n      <p>Word Bank</p>\n      <div style={flexWrap}>{wordBank.map((each, index) => <div key={index} style={spaceAround}>{each}</div>)}</div>\n      <form\n        onSubmit={onCreateNode}\n        className=\"formSize\"\n      >\n        <label>How would you describe your day?\n          <input\n            className=\"full-width-input\"\n            onChange={onChangeNodeName}\n            value={nodeName}\n            type=\"text\"\n            placeholder=\"node name...\"\n            ref={inputEl}\n          />\n        </label>\n        <label>Which word defines you?\n          <input\n            className=\"full-width-input\"\n            onChange={onChangeInterest}\n            value={nodeInterest}\n            type=\"text\"\n            placeholder=\"interest... a,b,c\"\n          />\n\n        </label>\n        <label>Which word has been your resoluton?\n          <input\n            className=\"full-width-input\"\n            onChange={onChangeInterest2}\n            value={nodeInterest2}\n            type=\"text\"\n            placeholder=\"interest2... a,b,c\"\n          />\n        </label>\n        <label>Which word would you use to describe your best friend?\n          <input\n            className=\"full-width-input\"\n            onChange={onChangeInterest3}\n            value={nodeInterest3}\n            type=\"text\"\n            placeholder=\"interest3... a,b,c\"\n          />\n        </label>\n        <label>What is the last word that you can think of?\n          <input\n            className=\"full-width-input\"\n            onChange={onChangeInterest4}\n            value={nodeInterest4}\n            type=\"text\"\n            placeholder=\"interest4... a,b,c\"\n          />\n        </label>\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Save\n        </button>\n\n      </form>\n\n      {/*<p>Current Node: {selectedNode} </p>*/}\n\n      <div >\n        <div style={flexWrap}>Select the names to checkout & modify word descriptions.\n          <hr />\n          <br />\n          <p>This time, for your convenience, you can easily update by clicking words.</p>\n        </div>\n        <hr />\n        {selectedNodeObject !== '' ? <p>Node Name: {selectedNodeObject.name} </p>: <br/>}\n        <hr />\n        {selectedNodeObject !== '' ? selectedNodeObject.interests.map((item, index)=> <div key={index}>{item}</div> ) : 'Click the node-names to see what others wrote'}\n      </div>\n\n      <form\n        onSubmit={onUpdateNode}\n        className=\"formSize\"\n      >\n        <div style={divStyle}>\n        {question1.map((item,index)=>\n          <input\n\n            key={index}\n            className=\"full-width-input inputButton\"\n            onClick={onClickInputButton}\n            type=\"button\"\n            value={item}\n\n          />)}\n        </div>\n        <div style={divStyle}>\n        {question2.map((item, index)=>\n          <input\n            key={index}\n            className=\"full-width-input inputButton\"\n            onClick={onClickInputButton}\n            type=\"button\"\n            value={item}\n          />)}\n        </div>\n        <button\n          className=\"button\"\n          type=\"submit\"\n        >\n          Update\n        </button>\n\n      </form>\n\n\n      <div className=\"mySketch\">\n        <P5Wrapper\n          countState={[count, setCount]}\n          nodesState={[nodesState, setNodesState]}\n          animalsState={[animalsState, setAnimalsState]}\n          selectedNode={[selectedNode, setSelectedNode]}\n          sketch={sketch}\n           />\n      </div>\n\n    </div>\n  )\n}\n\n\n\n\n\n\n\n\n\nexport default Sketch;\n// export default Sketch;\n\n\n/*\nlet a = ['1','2','3','4']\nlet b = ['5','6','7','8']\nlet c = ['9','10','11','12']\n\nlet sum = [...a, ...b, ...c]\n\n//need to curry here\nlet wordCounts = 4\nfunction randomItem(wordCounts){\n  return (...arrArg) => {\n    let copy = [...arrArg];\n    console.log(copy,'cp')\n    let randomNumber = 0;\n    let returnArray = []\n    for (let i = 0; i < wordCounts; i++) {\n      // let tempRandomNumber = Math.floor(Math.random() * arrArg.length)\n      // if(randomNumber !== tempRandomNumber) {\n      //   randomNumber = tempRandomNumber\n      // } else if(randomNumber == tempRandomNumber) {\n      //   randomNumber = Math.floor(Math.random() * arrArg.length)\n      // }\n      // console.log(randomNumber, tempRandomNumber)\n      randomNumber = Math.floor(Math.random() * copy.length)\n      returnArray.push(copy[randomNumber])\n      copy.splice(randomNumber,1)\n      // returnArray.push(copy[randomNumber])\n      // console.log(randomNumber)\n      // let newCp = copy.splice(randomNumber,1)\n      // console.log(newCp,'cpp1')\n      // let secondCp = copy.splice(randomNumber + 1, copy.length -1)\n      // console.log(secondCp,'cpp2')\n      // copy = […newCp, …secondCp]\n\n      console.log(copy)\n    }\n    return returnArray\n  }\n}\n\nlet chooseWords = randomItem(5)\nlet answer = chooseWords(…a, …b, …c);\nconsole.log(answer,'chosen')\n\n*/\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Sketch from '../P5Wrapper/sketch.js';\n\nclass FindEmoji extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render () {\n    return(\n      <Sketch />\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  };\n}\n\n\nexport default FindEmoji\n\n\n//\n// curl -i -X POST -H \"Content-Type: application/json\" -d '{ \"id\":\"1783551623, 9781783551620\",\"title\":\"React.js Essentials: A Fast-paced Guide to Designing and Building Scalable and Maintainable Web Apps With React.js\",\"author\": \"Artemij Fedosejev\",\"description\":\"A fast-paced guide to designing and building scalable and maintainable web apps with React.js.\",\"published_date\":\"2015-08-27T16:00:00Z\",\"publisher\":\"Packt Publishing\" }' localhost:3002/api/userDB\n//\n//\n//\n// curl -i -X POST -H \"Content-Type: application/json\" -d '[{\"id\": \"0\",\"interests\": ['T','I','G','E','R','D','O'],\"name\":\"tiger person\"}]' localhost:3002/api/userDB\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass About extends Component {\n\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  render () {\n    return(\n        <div className=\"\">\n              <div id=\"about_page\" >\n                  <div className=\"about_sections\">\n                      <h1>About Me</h1>\n                      <h3>Open Access at The Met</h3>\n                      <p>Coursework: Applied Internet Technology, Interactive Computing, Drawing on the Web, Creative Coding</p>\n                      <div className=\"divide\">\n                          <div>Web Programming and Applications, Minor</div><div className=\"rightSide\"></div>\n                      </div>\n                      <div className=\"divide\">\n                          <div>B.S., Media Communications</div><div></div>\n                      </div>\n                      <div className=\"divide\">\n                          <div>Studio Art Mino</div><div></div>\n                      </div>\n\n\n                      <p><em>-From the Met-</em></p>\n\n\n                      <div>\n                          <h3>SKILLs</h3>\n                          <hr />\n                          <br />\n                          <ul className=\"bulletPoints\">\n                              <li>Languages: English, Korean</li>\n                              <li>Programming Languages: JavaScript [Node.js, React.js, Three.js, AFrame.js, P5.js, D3.js, React Native, Redux, Processing.js], Python, HTML/CSS</li>\n                              <li>MS Office: Microsoft Word, Microsoft Excel, Microsoft PowerPoint</li>\n                              <li>Adobe Suite: Illustrator, Photoshop</li>\n                          </ul>\n                      </div>\n                  </div>\n\n                  <div className=\"about_sections\">\n                      <h3>PROFESSIONAL EXPERIENCE</h3>\n                      <hr />\n                      <br />\n                      <div className=\"jobDescription\">\n                          <h4>New York University</h4>\n                          <hr />\n                          <h5><i>Intro to Web Design, Grader</i></h5>\n                          <ul className=\"bulletPoints\">\n                              <li>Tested and inspected students’ projects on both remote and local host. Graded student projects under professor’s supervision.</li>\n                          </ul>\n\n                          <h5><i>Intro to Web Design, Teaching Assistant</i></h5>\n                          <ul className=\"bulletPoints\">\n                              <li>Provided students with detailed explanations of core ideas presented in class.</li>\n                          </ul>\n                      </div>\n\n                      <div className=\"jobDescription\">\n                          <h4>ROK Auxiliary Policeman</h4>\n                          <hr />\n                          <ul className=\"bulletPoints\">\n                            <li>Developed diet plans for a team of 200+ Auxiliary Policeman.\n                            </li>\n                            <li>Educated and provided dietary suggestion to promote the philosophy of good nutrition.\n                            </li>\n                            <li>Managed a given budget and distributed high-quality meals to the team in a cost-effective fashion.\n                            </li>\n                            <li>Administered weekly meetings with squad representatives to improve the diet plans, and modified special diet accordingly.\n                            </li>\n                          </ul>\n                      </div>\n                      <div className=\"jobDescription\">\n                          <h4>Note Inc.</h4>\n                          <hr />\n                          <ul className=\"bulletPoints\">\n                            <li>Acted as liaison for international company partners. Communicated with clients from outsourced factories.\n                            </li>\n                            <li>Translated and interpreted for both internal teams and external partner companies during the 18th Hong Kong Mega Showcase.\n                            </li>\n                          </ul>\n                      </div>\n                  </div>\n\n\n              </div>\n          </div>\n\n\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n  };\n}\n\n\nexport default connect(mapStateToProps)(About)\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { connect } from 'react-redux';\n\n\nconst MenuLink = props => {\n\n  const onMenuLinkClick = () => {\n\n    ReactGA.event({\n      category: 'MenuLink Clicked',\n      action: `id # ${props.project.id} -> clicked`\n    });\n\n    props.dispatch({        // need to implement\n      type: 'LINK_PRESSED'\n    })\n  }\n\n  // console.log(props,'haha')\n\n  return (\n    <li className=\"menuName\"><a onClick={onMenuLinkClick} className=\"hyperLink\" href={props.project.link}>{props.project.title}</a></li>\n  );\n}\n\n\n\nexport default connect()(MenuLink);\n","import React from 'react';\nimport MenuLink from './MenuLink';\n\n\n// function menuGrow() {\n//   let menuList = document.getElementsByClassName('menuName');\n//   console.log(menuList,'MENULIST')\n//   menuList.forEach(each => {\n//     each.style.backgroundColor = 'blue'\n//   });\n// }\n\n\nconst Menu = props => {\n  return(\n    <ul className=\"menuList\">\n      {props.projects.map(project => (\n        <MenuLink\n          key={project.id}\n          project={project}\n        />\n      ))}\n    </ul>\n  )\n}\n\nexport default Menu;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { connect } from 'react-redux';\nimport Navigation from './components/Navigation';\nimport Main from './components/Main';\nimport FindEmoji from './components/FindEmoji';\nimport About from './components/About';\nimport Menu from './components/Menu';\n\nimport {BrowserRouter , Route} from 'react-router-dom';\n\nimport {\n  fetchProjects,\n} from './actions';\nimport ReactGA from 'react-ga';\n\n// import Sketch from './components/P5Wrapper/sketch.js';\n\n\nconst mockProjects = [\n  {\n      id: 1,\n      title: 'Wave Generator',\n      description: 'description',\n      link: '/whatever',\n      videoURL: './assets/vids/2d3d_0x.mp4',\n  },\n  {\n      id: 2,\n      title: 'Alt Tage Generator',\n      description: 'temp',\n      link: '/whatever',\n      videoURL: './assets/vids/altgenerator_0x.mp4',\n  },\n]\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mockProjects: mockProjects,\n      mobile: false,\n    }\n  }\n\n  // import ReactGA from 'react-ga';\n  // const clickHandler = () => {\n  //   ReactGA.event({\n  //     category: 'Button',\n  //     action: 'Pressed Like Button'\n  //   });\n  // }\n\n\n\n  componentDidMount() {\n    document.title = 'Woo Park Portfolio'\n\n    const trackingId = \"UA-156446443-1\"; // Replace with your Google Analytics tracking ID\n     ReactGA.initialize(trackingId);\n     // ReactGA.pageview('/')\n     ReactGA.pageview(window.location.pathname + window.location.search)\n\n\n    this.props.dispatch(fetchProjects());\n    console.log('dispatched?')\n\n    const sections = document.querySelectorAll(\"section\")\n    console.log(sections,'sections')\n    const options = {\n      threshold: 0.4\n    }\n    const bubble = document.querySelector('.bubble');\n\n    let observer = new IntersectionObserver(navCheck, options)\n\n\n    const checkDevice = () => {\n      if (window.screen.width < 660) {\n        this.setState({mobile: true})\n        return\n      } else {\n        this.setState({mobile: false})\n      }\n      console.log('mobile', this.state.mobile)\n    }\n    checkDevice();\n\n\n    window.addEventListener(\"resize\", function(){\n        bubble.style.top = '-200px';\n        bubble.style.left = '-200px';\n        sections.forEach(section => {section.style.color = '#222222'}); //change all to black\n        // console.log('RESIZED')\n        checkDevice();\n\n    });\n\n    sections.forEach(section => {\n      // observer.observe(section);\n\n\n      section.addEventListener('mouseenter', (element)=>{\n        sections.forEach(section => {section.style.color = '#222222'}); //change all to black once in the beginning\n        element.target.style.color = '#F8F8FF';\n        navCheck(element)\n      })\n    })\n\n    function navCheck (entry) {\n      // entries.forEach(entry => {\n        const className = entry.target.className;\n\n        console.log(className);\n        const activeAnchor = document.querySelector(`.${className}Loc`)\n        // const gradientIndex = entry.target.getAttribute('data-index');\n        console.log(activeAnchor,'activeAnchor');\n        const coords = activeAnchor.getBoundingClientRect();\n        const directions = {\n          height: coords.height,\n          width: coords.width,\n          top: coords.top,\n          left: coords.left,\n        }\n            console.log(coords)\n      //\n      //\n      //   if (entry.isIntersecting) {\n      //     // console.log(coords)\n      //     console.log(entry)\n          bubble.style.setProperty(\"left\", `${directions.left}px`);\n          bubble.style.setProperty(\"top\", `${directions.top}px`);\n          bubble.style.setProperty(\"width\", `${directions.width}px`);\n          bubble.style.setProperty(\"height\", `${directions.height}px`);\n      //   }\n      // // });\n    }\n\n  }\n\n\n\n\n\n  render() {\n    console.log(this.props,'from app js');\n    console.log(this.states,'from app js');\n    return(\n      <BrowserRouter>\n\n        {/* <Switch> doesn't work */}\n        <div className=\"container\">\n          <div className=\"item-a header one-edge-shadow\">\n            <div className=\"portfolioLogo\"></div>\n            <div className=\"headerLogo\"></div>\n            <Navigation />\n          </div>\n          <div className=\"item-c side middle\">\n            {this.state.mobile == true ? <div className=\"message\">Please use desktop to experience & experiment the provided links.</div> : ''}\n            <Menu projects={this.props.projects}\n            />\n\n          </div>\n\n          <div className=\"item-b main middle\">\n\n          {/*\n            <Sketch\n\n\n            />\n            */}\n\n\n\n            <Route exact path=\"/\" component={Main} />\n            <Route exact path=\"/about\" component={About} />\n            {/*<Route exact path=\"/emoji\" component={FindEmoji} />*/}\n          </div>\n          <div className=\"item-d footer\">\n          </div>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  console.log(state, 'from reducer')\n  const { projects, projectsLength } = state.page;\n\n  return {\n    projects: projects,\n    projectsLength: projectsLength,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","const initialPageState = {\n  projectsLength: 0,\n  projects: [],\n}\n\nexport function page(state = initialPageState, action) {\n  switch (action.type) {\n\t  case 'RECEIVE_ENTITIES': {\n      const { projects } = action.payload;\n\n\n\t    return {\n        ...state,\n        projects: projects,\n        projectsLength: projects.length,\n\t    }\n\t  }\n    // case 'CHANGE_PAGE':\n    //   return {\n    //     ...state,\n    //     myAction: 'CHANGE_PAGE'\n    //   }\n    case 'CREATE_COMMENT':\n      const { projectIdComment } = action.payload;\n      const { comment } = action.payload;\n\n      console.log(projectIdComment + 'aa ' + comment + 'create comment');\n      let myProjects = state.projects;\n      // myProjects.forEach((each) => {if (each.id == projectIdComment) {\n      //   each.comment = {\n      //     [each.comment != undefined ? each.comment.length : 0]: comment}\n      // }})\n      myProjects.forEach((each) => {    //figure out arr or whateve\n        if (each.id === projectIdComment) {\n           // if (!each.comment) {\n           //   each.comment = [];\n           //   each.comment.push(comment);\n           // } else {\n           //   each.comment.push(comment);\n           // }\n           let newArr = [];\n           comment.forEach(each => {\n             newArr.push(each)\n           })\n           // each.comment = [...comment];\n           each.comment = newArr\n      }})   //changes inplace\n\n      console.log(myProjects, 'MA PROJ')\n\n      return {\n        ...state,\n        projects: [...myProjects]\n      }\n\n    case 'COUNT_UP':\n      console.log(state.projects)\n      const { projects } = state;\n      const { projectId } = action.payload;\n      if (projects.length > 0) {\n\n        const pushedProject = getProjectByProjectId(projects, projectId);   //dont even need this\n        console.log(pushedProject)\n        // projects = projects.filter(each => each.id != projectId);\n        projects.forEach((each) => {if (each.id === projectId) { each.counts += 1}})   //changes inplace\n\n        return {\n          ...state,\n          projectsLength: projects.length,\n          projects: [...projects]\n        }\n      }\n\t  default: {\n\t    return state;\n\t  }\n  }\n}\n\nfunction getProjectByProjectId(projects, projectId) {\n\n  let matchingProject = projects.filter(each => each.id === projectId);\n  console.log(matchingProject,'matchingProject')\n\n  return matchingProject[0];\n}\n\nexport function lastAction(state = null, action) {\n  return action;\n}\n","const logger = store => next => action => {\n  console.group(action.type);\n  console.log('dispatching: ', action);\n  const result = next(action);\n  // at this point, action is sent to the reducer\n  // logs from here on is after the store is updated\n\n  console.log('next state: ', store.getState()) // we have this bc store is passed on\n  console.groupEnd(action.type)\n\n  return result;\n}\n\nexport default logger;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport './index.css';\n// import { projects, tasks, page } from './reducers';\nimport { page, lastAction } from './reducers';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport logger from './Middleware/logger';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\n// import createSagaMiddleware from 'redux-saga';\n// import ReactGA from 'react-ga';\n\nconst rootReducer = (state = {}, action) => {\n  return {\n    // projects: projects(state.projects, action),\n    // tasks: tasks(state.tasks, action),\n    page: page(state.page, action),\n    lastAction: lastAction(state.page, action),\n  };\n};\n//\n// const trackingId = \"UA-156446443-1\"; // Replace with your Google Analytics tracking ID\n// ReactGA.initialize(trackingId);\n//\n// function initializeReactGA() {\n//     ReactGA.initialize('UA-123791717-1');\n// }\n\n// ReactGA.event({\n//   category: 'User',\n//   action: 'Create an Account'\n// });\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk, logger))\n);   //pass in the reducer to the store\n\n\nReactDOM.render(\n  <Provider store={store}>\n      <App store={store} />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}